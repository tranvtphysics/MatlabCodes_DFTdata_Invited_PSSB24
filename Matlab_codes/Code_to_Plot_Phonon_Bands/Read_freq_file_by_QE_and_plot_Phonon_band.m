
% This tool reads data of frequencies in the file *.freq generated by
% phonon QE calculations, and then plot the phonon disperson

clear all

%% directory stores the phonon data files
dir='/media/tranvt/Importance/DATA/RESEARCH/My papers/Drafts/2024.Paper2_DFT_phonon_transport/Paper_PSSA2024_Matlab_codes_and_DFT_data/Some_DFT_data/2D-graphene/GGA_with_optimized_structure/phonon/Results/';

% NOTE: After Calculating phononbands with matdyn.x, there are two files are generated: prefix.freq and prefix.freq.gp
% prefix.freq: contains information of number of bands, number of qpoints,q-vectors and frequencies
% prefix.freq.gp: contains q-distance and frequencies

prefix_file='2Dgraphene';

plot_title='Read from 2Dgraphene.freq by QE';


cd(dir)

%% READ FILE .freq

file_data=sprintf('%s.freq',prefix_file);

fileID = fopen(file_data,'r');

% Count number of lines need to be scaned 
[status1,cmdout1]=system(sprintf('wc -l < %s',file_data)); % Counting number of data lines in the data file
Nlines=str2num(cmdout1);

number_lines_scaned=Nlines; % Look at txt file to see how many lines need to be scaned
Intro = textscan(fileID,'%s',number_lines_scaned,'Delimiter','\n');
IF=Intro{1};
fclose(fileID);


%  Number of bands, q points 
n_kpoints=101;  % number of k points, count this in txt file
N_bands=6; % number of bands=natx3, , count this in txt file


% phonon bands
Nline_band_1kpoint=1;% number of lines of bands per 1 k point
K_path=zeros(n_kpoints,3);
Ph_bands=zeros(n_kpoints,N_bands);

k=1;
for i=1:n_kpoints
    
    line_k_points=2+(Nline_band_1kpoint+1)*(i-1);
    K_path(i,:)=str2num(IF{ line_k_points});
    
    Ph_bands_ki=[];
    for n=1:Nline_band_1kpoint
        Ph_bands_ki=[Ph_bands_ki,str2num(IF{line_k_points+n})];
    end
       
     Ph_bands(i,:)=Ph_bands_ki;
     clear Ph_bands_ki
end
%% READ FILE .freq.gp: only need to extract q-distance:
% load(sprintf('%s.freq.gp',prefix_file)) 

Nq_path=n_kpoints; % all q-point in the q-paths considered
q_distance=1:Nq_path;%X2Dgraphene_freq(:,1);

% freqs=X2Dgraphene_freq(:,2:end); % cm-1


%% PLOT
%=============================================================================
npath=3;
segment_qpoints=[40,20,40,20]; %Graphene, MoS2: [40,20,40,20], {'G','K', 'M', 'G'};
Labels={'G','K', 'M', 'G'}; %{'G','X'};%{'L','G', 'X', 'W', 'G'};%{'G','X'};%
%Labels={'', '

Labels_position=zeros(1,npath+1);
Labels_position(1)=1;
for i=1:npath
Labels_position(i+1)=sum(segment_qpoints(1:i))+1;
end

%=============================================================================
cmm1_to_Hz=2.99793*1e10; % equivalent cmm1_to_secondm1

figure(4)
hold on
clor='--b';
%h1=plot(q_distance,Ph_bands*cmm1_to_Hz*1e-12,'linewidth',3); % without the band-crossing treatment
% h1=plot(q_distance,Ph_bands_treated_crossing*cmm1_to_Hz*1e-12,'linewidth',3); % with the band-crossing treatment
h1=plot(([1:Nq_path]-1)/(Nq_path-1),Ph_bands,'linewidth',3); % with the band-crossing treatment

for i=2:npath
ln(i-1)=line([q_distance(Labels_position(i))-1 q_distance(Labels_position(i))-1]/(Nq_path-1), [0 1.1*max(max(Ph_bands))],'LineStyle','--');
end

ylabel(' Frequency (cm^{-1})','Fontsize',24);
xlabel('q-paths ','Fontsize',24);
set(gca,'Xtick',(q_distance(Labels_position)-1)/(Nq_path-1),'XTickLabel',Labels,'Fontsize',24,'Color','none');
legend(sprintf('%s',plot_title))
title(plot_title);
set(gca,'Fontsize',24)
%xlim([0,max(q_distance)])
box on
ylim([-50,1700])

%% save figures
string1=sprintf('Phonon_bands_DFT_QE.png');
saveas(gcf,string1);% save figure
string2=sprintf('Phonon_bands_DFT_QE.fig');
saveas(gcf,string2);% save figure
